#ifndef C_MAIN_WINDOW_H
#define C_MAIN_WINDOW_H

//****************************************************************************************************
//главный класс программы
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <QMainWindow>
#include <vector>
#include <memory>
#include <string>

#include "clabel_imagearea.h"
#include "interpolation/iinterpolater.h"

//****************************************************************************************************
//пространства имён
//****************************************************************************************************
namespace Ui
{
 class CMainWindow;
}

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//главный класс программы
//****************************************************************************************************
class CMainWindow:public QMainWindow
{
 Q_OBJECT
 private:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
  static const uint32_t AREA_WIDTH=640;//ширина области графика
  static const uint32_t AREA_HEIGHT=480;//высота области графика
 private:
  //-переменные-----------------------------------------------------------------------------------------
  std::unique_ptr<IGraphics> iGraphics_Ptr;//указатель на класс рисования графиков
  std::unique_ptr<IVideo> iVideo_Ptr;//указатель на класс отображения
  std::vector<CGrPoint> InputPoints;//набор входных точек для построения графика
  std::vector<std::pair<IInterpolater*,std::string> > InterpolaterList;//список интерполяторов с указателями на классы интерполяции

  Ui::CMainWindow *ui;//пользовательский интерфейс
  CLabel_ImageArea *cLabel_ImageArea_Ptr;//виджет отображения графика
 public:
  //-конструктор----------------------------------------------------------------------------------------
  explicit CMainWindow(QWidget *parent=0);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CMainWindow();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
 private:
  //-закрытые функции-----------------------------------------------------------------------------------
  void Sort(std::vector<CGrPoint> &input_points) const;//отсортировать массив точек
  void Unique(std::vector<CGrPoint> &input_points) const;//убрать одинаковые последовательные элементы из массива точек
  bool Interpolate(std::vector<CGrPoint> &input_points,IInterpolater *iInterpolater_Ptr,const std::string &name,long double step);//выполнить интерполяцию
 private slots:
  //-закрытые слоты-------------------------------------------------------------------------------------
  void on_qPushButton_ApplyInterpolation_clicked(void);//обработчик события нажатия на кнопку "Применить вариант интерполяции"
  void on_qPushButton_AddPoint_clicked();//событие нажатия на кнопку "Добавить точку в список"
  void on_qPushButton_ClearPointList_clicked();//событие нажатия на кнопку "Очистить список точек"
};

#endif
